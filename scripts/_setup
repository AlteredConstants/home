#!/bin/bash
script_path="$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"
source "$("$script_path/get-func-path" exit-error)"

if [[ ! -d $HOME ]]; then
	exit-error "HOME directory does not exist: $HOME"
fi

repo_root="$(cd "$script_path/.."; pwd)"
normalized_home="$(cd "$HOME"; pwd)"
if [[ $repo_root != $normalized_home ]]; then
	echo "Merging into HOME ($HOME)..."
	if [[ -d $HOME/.git ]]; then
		exit-error "HOME/.git already exists and would merge poorly"
	fi
	shopt -s dotglob
	cp -riv "$repo_root"/* "$HOME"
	shopt -u dotglob
fi

cd "$HOME"

source .bash_profile

echo "Updating submodules..."
git submodule update --init --recursive

echo "Creating symlinks..."
platform=$(run-lib get-platform)
if [[ $platform == windows && ! -e $APPDATA/Code/User/settings.json ]]; then
	symlink .vscode_config $APPDATA/Code/User/settings.json
fi

echo "Checking for SSH keys..."
if  [[ ! -f .ssh/id_rsa.pub ]]; then
	echo "No key found. Generating..."
	ssh-keygen -t rsa -b 4096 -f $HOME/.ssh/id_rsa -N ''
fi

if [[ $(git config --get remote.origin.url) == https://* ]]; then
	echo -n "Use SSH for the home repo? [y/N] "
	read -n 1 use_ssh
	echo
	if [[ $use_ssh =~ [yY] ]]; then
		git remote set-url origin git@github.com:AlteredConstants/home.git
		echo "==================================================="
		cat .ssh/id_rsa.pub
		echo "==================================================="
		echo "Don't forget to set the key above in the approved list on GitHub."
	fi
fi

echo "Done."
